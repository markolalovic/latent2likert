---
title: "README-test"
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
summary(cars)
plot(pressure)
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
install.packages('rmarkdown')
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown", dep = TRUE)
getwd()
setwd("/home/marko/Dropbox/responsesR-package/RMarkdown/")
getwd()
rmarkdown::render("README-test.Rmd")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
rmarkdown::render("README-test.Rmd")
install.packages("grobblR")
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#>",
fig.path = "./man/figures/README-",
out.width = "65%")
df <- genLikert(size = 100, items = 10)
df <- genLikert(size = 100, items = 10)
setwd("/home/marko/repos/responsesR/R/")
set.seed(12345)
source("responses.R")
library(corrplot)
setwd("/home/marko/repos/responsesR/R/")
set.seed(12345)
source("responses.R")
library(corrplot)
df <- genLikert(size = 100, items = 10)
par(mfrow=c(2, 5))
for(i in 1:10) {
barplot(table(df[, i]))
}
df <- genLikert(size = 100, items = 10)
head(df)
corrplot(corr=cor(df))
df <- genLikert(size = 100, items = 10, correlation = 0.5)
corrplot(corr=cor(df))
R <- c(1.00, -0.63, -0.39, -0.63, 1.00, 0.41, -0.39, 0.41, 1.00)
R <- matrix(R, nrow=3)
R
set.seed(12345)
df <- genLikert(size = 100, items = 3, correlation = R)
corrplot(corr=cor(df), method = "number")
df <- genLikert(size = 1000, items = 1, levels = 10)
barplot(table(df))
df <- genLikert(size = 1000, items = 3, levels = c(2, 4, 10))
par(mfrow=c(1, 3))
for(i in 1:3) {
barplot(table(df[, i]))
}
df <- genLikert(size = 10^6, levels = 100)
par(mfrow=c(1, 1))
barplot(table(df)/10^6)
df <- genLikert(size = 1000, items = 3, location = c(-1, 0, 1))
for(i in 1:3) {
barplot(table(df[, i]))
}
df <- genLikert(size = 1000, items = 3, scale = c(0.5, 1, 1.5))
par(mfrow=c(1, 3))
for(i in 1:3) {
barplot(table(df[, i]))
}
df <- genLikert(size = 1000, items = 3, shape = c(-5, 0, 5))
for(i in 1:3) {
barplot(table(df[, i]))
}
df <- genLikert(size = 10^6, levels = 100, shape = -5)
df <- genLikert(size = 10^6, levels = 100, shape = -5)
par(mfrow=c(1, 1))
par(mfrow=c(1, 1))
barplot(table(df)/10^6)
